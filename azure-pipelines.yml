# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

resources:
  containers:
    - container: wpilib2020
      image: wpilib/roborio-cross-ubuntu:2020-18.04

stages:
  - stage: Build
    jobs:

      - job: Linux
        pool:
          vmImage: 'Ubuntu 16.04'

        container: wpilib2020

        steps:
          - task: Gradle@2
            inputs:
              workingDirectory: ''
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              tasks: 'build publish'
              options: '-PciBuild --info'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: maven repo'
            inputs:
              PathtoPublish: 'build/maven_repo'
              ArtifactName: 'LinuxMaven'

      - job: Windows_64_Bit
        pool:
          vmImage: 'vs2017-win2016'
        steps:
          - powershell: |
              mkdir build
              $ProgressPreference = 'SilentlyContinue'
              wget "https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.4%2B11/OpenJDK11U-jdk_x86-32_windows_hotspot_11.0.4_11.zip" -O "build\jdk.zip"
            displayName: 'Download JDK'
          - task: JavaToolInstaller@0
            inputs:
              jdkSourceOption: localDirectory
              jdkFile: 'build/jdk.zip'
              jdkDestinationDirectory: 'build/jdkinst'
              jdkArchitectureOption: x64
          - task: Gradle@2
            inputs:
              workingDirectory: ''
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              tasks: 'build publish'
              options: ''

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: maven repo'
            inputs:
              PathtoPublish: 'build/maven_repo'
              ArtifactName: 'Win64Maven'

      - job: Mac
        pool:
          vmImage: 'xcode9-macos10.13'
        steps:
          - script: |
              mkdir build
              wget "https://download.java.net/java/ga/jdk11/openjdk-11_osx-x64_bin.tar.gz" -O "build/jdk.tar.gz"
              sudo tar xvzf build/jdk.tar.gz -C /Library/Java/JavaVirtualMachines/
              export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/
            displayName: 'Setup JDK'
          - task: Gradle@2
            inputs:
              workingDirectory: ''
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              javaHomeOption: 'path'
              jdkDirectory: '/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              tasks: 'build publish'
              options: '-PciBuild'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: maven repo'
            inputs:
              PathtoPublish: 'build/maven_repo'
              ArtifactName: 'OSXMaven'

      - job: PrepareMaven
        pool:
          vmImage: 'ubuntu-16.04'
        steps:

          - task: DownloadBuildArtifacts@0
            displayName: 'Download Linux Artifacts'
            inputs:
              artifactName: 'LinuxMaven'
              downloadPath: $(System.DefaultWorkingDirectory)/linux

          - task: DownloadBuildArtifacts@0
            displayName: 'Download Windows 64 Artifacts'
            inputs:
              artifactName: 'Win64Maven'
              downloadPath: $(System.DefaultWorkingDirectory)/win64

          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: 'OSXMaven'
              downloadPath: $(System.DefaultWorkingDirectory)/mac

          - powershell: |
              Copy-Item $(System.DefaultWorkingDirectory)/win64/Win64Maven/*   $(System.DefaultWorkingDirectory)/output     -recurse -force -verbose
              Copy-Item $(System.DefaultWorkingDirectory)/mac/OSXMaven/*       $(System.DefaultWorkingDirectory)/output     -recurse -force -verbose
              Copy-Item $(System.DefaultWorkingDirectory)/linux/LinuxMaven/*   $(System.DefaultWorkingDirectory)/output     -recurse -force -verbose

          #- task: PythonScript@0
          #  displayName: 'Create Combined Native Jar'
          #  inputs:
          #    scriptPath: ci_tools/create_all.py
          #    arguments: "--start_dir=$(System.DefaultWorkingDirectory)/output"

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Combined Artifacts'
            inputs:
              PathtoPublish: $(System.DefaultWorkingDirectory)/output
              ArtifactName: 'CoordinateGuiMaven'

        dependsOn: [ Windows_64_Bit, Mac, Linux ]
        condition: succeeded()
